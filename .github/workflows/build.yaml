name: Build

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - 'examples/**'
  release:
    types:
      - published
  pull_request:
    paths-ignore:
      - '**.md'
      - 'examples/**'

env:
  IMAGE_BASE_NAME: vergissberlin/pandoc-eisvogel-de

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Define environment variables
        env:
          LATEST_TAG: '${{ env.IMAGE_BASE_NAME }}:latest'
          PLANTUML_TAG: '${{ env.IMAGE_BASE_NAME }}:plantuml'
        run: |
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV
          echo "PLANTUML_TAG=${PLANTUML_TAG}" >> $GITHUB_ENV

      - name: Build base image
        run: docker build -t "${LATEST_TAG}" .

      - name: Run base image
        run: |
          cd examples/basics
          docker run --rm -v $(pwd):/data "${LATEST_TAG}" -d config.yaml -o doc.pdf doc.md

      - name: Build plantuml image
        run: |
          cd plantuml
          docker build -t "${PLANTUML_TAG}" .

      - name: Run plantuml image
        run: |
          cd examples/plantuml
          docker run --rm -v $(pwd):/data "${PLANTUML_TAG}" -o doc.pdf doc.md

      - name: Log in to Docker Hub
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        if: github.event_name == 'release' && github.event.action == 'published'
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: vergissberlin/pandoc-eisvogel-de

      - name: Get release version
        if: github.event_name == 'release' && github.event.action == 'published'
        env:
          RELEASE_TAG: ${{ github.event.release.tag_name }}
        run: echo "RELEASE_VERSION=${RELEASE_TAG#v}" >> $GITHUB_ENV

      - name: Build and push Docker image
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Push base image
        if: github.event_name == 'release' && github.event.action == 'published'
        env:
          VERSION_TAG: '${{ env.IMAGE_BASE_NAME }}:${{ env.RELEASE_VERSION }}'
        run: |
          docker tag "${LATEST_TAG}" "${VERSION_TAG}"
          docker push "${VERSION_TAG}"
          docker push "${LATEST_TAG}"

      - name: Push plantuml image
        if: github.event_name == 'release' && github.event.action == 'published'
        env:
          VERSION_TAG: '${{ env.IMAGE_BASE_NAME }}:${{ env.RELEASE_VERSION }}-plantuml'
        run: |
          docker tag "${PLANTUML_TAG}" "${VERSION_TAG}"
          docker push "${VERSION_TAG}"
          docker push "${PLANTUML_TAG}"
